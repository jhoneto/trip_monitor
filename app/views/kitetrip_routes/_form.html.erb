<%= form_with(model: [@kitetrip, kitetrip_route], class: "contents") do |form| %>
  <% if kitetrip_route.errors.any? %>
    <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-md mt-3">
      <h2><%= pluralize(kitetrip_route.errors.count, "error") %> prohibited this kitetrip_route from being saved:</h2>

      <ul class="list-disc ml-6">
        <% kitetrip_route.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="grid grid-cols-1 gap-8">
    <!-- Form Fields -->
    <div class="space-y-5">
      <div>
        <%= form.label :name, "Nome da Rota", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.text_field :name, 
            placeholder: "Ex: Rota Fortaleza - Canoa Quebrada",
            class: ["block shadow-sm rounded-md border px-3 py-2 w-full", 
                   {"border-gray-400 focus:outline-blue-600": kitetrip_route.errors[:name].none?, 
                    "border-red-400 focus:outline-red-600": kitetrip_route.errors[:name].any?}] %>
      </div>

      <div>
        <%= form.label :description, "Descri√ß√£o", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.text_area :description, 
            rows: 3,
            placeholder: "Descreva a rota, pontos de interesse, condi√ß√µes esperadas...",
            class: ["block shadow-sm rounded-md border px-3 py-2 w-full", 
                   {"border-gray-400 focus:outline-blue-600": kitetrip_route.errors[:description].none?, 
                    "border-red-400 focus:outline-red-600": kitetrip_route.errors[:description].any?}] %>
      </div>

      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div>
          <%= form.label :start_date, "Data de In√≠cio", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.datetime_local_field :start_date, 
              class: ["block shadow-sm rounded-md border px-3 py-2 w-full", 
                     {"border-gray-400 focus:outline-blue-600": kitetrip_route.errors[:start_date].none?, 
                      "border-red-400 focus:outline-red-600": kitetrip_route.errors[:start_date].any?}] %>
        </div>

        <div>
          <%= form.label :end_date, "Data de Fim", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.datetime_local_field :end_date, 
              class: ["block shadow-sm rounded-md border px-3 py-2 w-full", 
                     {"border-gray-400 focus:outline-blue-600": kitetrip_route.errors[:end_date].none?, 
                      "border-red-400 focus:outline-red-600": kitetrip_route.errors[:end_date].any?}] %>
        </div>
      </div>

      <!-- Route Info Display -->
      <div id="route-info" class="bg-gray-50 p-4 rounded-md">
        <h4 class="font-medium text-gray-800 mb-2">Informa√ß√µes da Rota</h4>
        <div class="grid grid-cols-2 gap-4 text-sm">
          <div>
            <span class="text-gray-600">Pontos:</span>
            <span id="points-count" class="font-medium">0</span>
          </div>
          <div>
            <span class="text-gray-600">Dist√¢ncia estimada:</span>
            <span id="route-distance" class="font-medium">-</span>
          </div>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="flex flex-col sm:flex-row gap-3">
        <%= form.submit "Salvar Rota", class: "rounded-md px-4 py-2 bg-blue-600 hover:bg-blue-500 text-white font-medium cursor-pointer" %>
        
        <button type="button" 
                class="rounded-md px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium cursor-pointer"
                onclick="document.querySelector('[data-controller*=map]').controller.clearRoute()">
          Limpar Rota
        </button>
        
        <%= link_to "Cancelar", [@kitetrip, :kitetrip_routes], 
            class: "text-center rounded-md px-4 py-2 bg-gray-100 hover:bg-gray-50 text-gray-700 font-medium" %>
      </div>
    </div>

    <!-- Interactive Map -->
    <div class="w-full">
      <div class="bg-white p-4 rounded-lg shadow-sm border">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-medium text-gray-800">Mapa da Rota</h3>
          <div class="text-xs text-gray-500">
            Clique no mapa para adicionar pontos √† rota
          </div>
        </div>
        
        <div data-controller="map"
             data-map-initial-coordinates-value="<%= kitetrip_route.route_coordinates.to_json %>"
             data-map-center-value="[-38.5434, -3.7319]"
             data-map-zoom-value="10"
             class="relative">
          
          <!-- Hidden field for route coordinates (must be inside map controller) -->
          <%= form.hidden_field :route_coordinates_json, 
              data: { map_target: "coordinates" },
              value: kitetrip_route.route_coordinates.any? ? kitetrip_route.route_coordinates.to_json : "[]" %>
          
          <div data-map-target="container" 
               class="w-full h-[500px] rounded-md border border-gray-300"></div>
          
          <!-- Map Controls -->
          <div class="mt-3 flex justify-between items-center text-sm text-gray-600">
            <div class="flex items-center space-x-4">
              <span>üó∫Ô∏è OpenStreetMap</span>
              <span class="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded">
                Clique para adicionar ‚Ä¢ Arraste para mover ‚Ä¢ Popup para remover
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
<% end %>

<script>
// Update route info when coordinates change
document.addEventListener('DOMContentLoaded', function() {
  const coordinatesField = document.querySelector('[data-map-target="coordinates"]');
  
  function updateRouteInfo() {
    try {
      const coordinates = JSON.parse(coordinatesField.value || '[]');
      document.getElementById('points-count').textContent = coordinates.length;
      
      if (coordinates.length >= 2) {
        // Simple distance calculation (approximate)
        let totalDistance = 0;
        for (let i = 1; i < coordinates.length; i++) {
          const lat1 = coordinates[i-1][1];
          const lng1 = coordinates[i-1][0];
          const lat2 = coordinates[i][1];
          const lng2 = coordinates[i][0];
          
          const distance = Math.sqrt(Math.pow(lat2 - lat1, 2) + Math.pow(lng2 - lng1, 2)) * 111.32;
          totalDistance += distance;
        }
        document.getElementById('route-distance').textContent = totalDistance.toFixed(2) + ' km';
      } else {
        document.getElementById('route-distance').textContent = '-';
      }
    } catch (e) {
      // Handle JSON parse error
    }
  }
  
  coordinatesField.addEventListener('change', updateRouteInfo);
  updateRouteInfo(); // Initial call
});
</script>
